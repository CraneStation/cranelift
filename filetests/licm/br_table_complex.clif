test licm
target x86_64

function %br_complex(i64, i64) {
    jt0 = jump_table [ebb2, ebb3]

ebb0(v0: i64, v1: i64):
[RexOp1jt_base#808d]   v4 = jump_table_base.i64 jt0
[RexOp1jt_entry#8063]  v5 = jump_table_entry.i64 v0, v4, 4, jt0
                       v6 = iadd v4, v5
[Op1indirect_jmp#40ff] indirect_jump_table_br v6, jt0

ebb1:
[Op1ret#c3]            return

ebb2:
                       v2 = iconst.i32 0
[RexOp1jt_entry#8063]  v7 = jump_table_entry.i64 v1, v4, 4, jt0
                       v8 = iadd v4, v7
[Op1indirect_jmp#40ff] indirect_jump_table_br v8, jt0


ebb3:
[Op2trap#40b]          trap user65535
}

; sameln: function %br_complex
; nextln:     jt0 = jump_table [ebb2, ebb3]
; nextln:     jt1 = jump_table [ebb4, ebb3]
; nextln: 
; nextln: ebb0(v0: i64, v1: i64):
; nextln:    v4 = jump_table_base.i64 jt0
; nextln:    v5 = jump_table_entry.i64 v0, v4, 4, jt0
; nextln:    v6 = iadd v4, v5
; nextln:    indirect_jump_table_br v6, jt1
; nextln: 
; nextln: ebb1:
; nextln:    return
; nextln: 
; nextln: ebb4:
; nextln:    v2 = iconst.i32 0
; nextln:    v7 = jump_table_entry.i64 v1, v4, 4, jt0
; nextln:    v8 = iadd.i64 v4, v7
; nextln:    jump ebb2
; nextln: 
; nextln: ebb2:
; nextln:    indirect_jump_table_br.i64 v8, jt0
; nextln: 
; nextln: ebb3:
; nextln:    trap user65535
; nextln: }
